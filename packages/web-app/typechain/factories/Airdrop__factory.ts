/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Airdrop, AirdropInterface } from "../Airdrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AirdropNotCurrent",
    type: "error",
  },
  {
    inputs: [],
    name: "AirdropNotOver",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAirdrop",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidClaimTimes",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInMerkle",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "airdropId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "airdropStartTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "airdropEndTime",
        type: "uint256",
      },
    ],
    name: "AirdropCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "airdropConfig",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "adminAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "airdropStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "airdropEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountRemaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_totalSum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_airdropStartTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_airdropEndTime",
        type: "uint256",
      },
    ],
    name: "createAirdrop",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_airdropId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "drainAirdropFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextAirdropId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600255610be0806100256000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063120aa877146100675780632e7ba6ef146100aa5780635d5458b1146100bf5780639ef5d5e6146100d2578063aff38dc8146100f3578063c320701c146100fc575b600080fd5b610095610075366004610976565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020015b60405180910390f35b6100bd6100b83660046109a2565b610189565b005b6100bd6100cd366004610976565b610371565b6100e56100e0366004610a39565b6103fb565b6040519081526020016100a1565b6100e560025481565b61014b61010a366004610a80565b6000602081905290815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695939490921692909186565b604080516001600160a01b039788168152602081019690965293909516928401929092526060830152608082015260a081019190915260c0016100a1565b600085815260208190526040902060018101546101b95760405163e6dcad7760e01b815260040160405180910390fd5b42816003015411806101ce5750428160040154105b156101ec5760405163fae5a90d60e01b815260040160405180910390fd5b60008681526001602090815260408083206001600160a01b038916845290915290205460ff161561023057604051630c8d9eab60e31b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606087901b1660208201526034810185905260009060540160405160208183030381529060405280519060200120905060006102b48585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050506001850154846105b8565b9050806102d45760405163452c2df160e11b815260040160405180910390fd5b60008881526001602081815260408084206001600160a01b03808d1686529252909220805460ff191690911790558354610310911688886105ce565b858360050160008282546103249190610aaf565b90915550506040518681526001600160a01b038816907f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49060200160405180910390a25050505050505050565b600082815260208190526040902060028101546001600160a01b031633146103ac57604051637bfa4b9f60e01b815260040160405180910390fd5b42816004015411156103d15760405163086064b160e01b815260040160405180910390fd5b600581015481546103ef916001600160a01b039091169084906105ce565b60006005909101555050565b6002546000908661041f576040516329e7276760e11b815260040160405180910390fd5b8383108061042c57504283105b1561044a576040516351aac60d60e01b815260040160405180910390fd5b6040518060c00160405280866001600160a01b03168152602001888152602001336001600160a01b031681526020018581526020018481526020018781525060008083815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600301556080820151816004015560a08201518160050155905050610540333088886001600160a01b0316610636909392919063ffffffff16565b60408051828152602081018990529081018790523360608201526080810185905260a081018490527f2a871c9cb6b50be9e448091627fe6bcd4f97cf6516fdd3d5368a4254817a1e609060c00160405180910390a16001600260008282546105a89190610ac6565b9091555090979650505050505050565b6000826105c58584610674565b14949350505050565b6040516001600160a01b03831660248201526044810182905261063190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106c1565b505050565b6040516001600160a01b038085166024830152831660448201526064810182905261066e9085906323b872dd60e01b906084016105fa565b50505050565b600081815b84518110156106b9576106a58286838151811061069857610698610ade565b6020026020010151610798565b9150806106b181610af4565b915050610679565b509392505050565b6000610716826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ca9092919063ffffffff16565b80519091501561063157808060200190518101906107349190610b0d565b6106315760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b60008183106107b45760008281526020849052604090206107c3565b60008381526020839052604090205b9392505050565b60606107d984846000856107e1565b949350505050565b6060824710156108425760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161078f565b600080866001600160a01b0316858760405161085e9190610b5b565b60006040518083038185875af1925050503d806000811461089b576040519150601f19603f3d011682016040523d82523d6000602084013e6108a0565b606091505b50915091506108b1878383876108bc565b979650505050505050565b6060831561092b578251600003610924576001600160a01b0385163b6109245760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161078f565b50816107d9565b6107d983838151156109405781518083602001fd5b8060405162461bcd60e51b815260040161078f9190610b77565b80356001600160a01b038116811461097157600080fd5b919050565b6000806040838503121561098957600080fd5b823591506109996020840161095a565b90509250929050565b6000806000806000608086880312156109ba57600080fd5b853594506109ca6020870161095a565b935060408601359250606086013567ffffffffffffffff808211156109ee57600080fd5b818801915088601f830112610a0257600080fd5b813581811115610a1157600080fd5b8960208260051b8501011115610a2657600080fd5b9699959850939650602001949392505050565b600080600080600060a08688031215610a5157600080fd5b8535945060208601359350610a686040870161095a565b94979396509394606081013594506080013592915050565b600060208284031215610a9257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610ac157610ac1610a99565b500390565b60008219821115610ad957610ad9610a99565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610b0657610b06610a99565b5060010190565b600060208284031215610b1f57600080fd5b815180151581146107c357600080fd5b60005b83811015610b4a578181015183820152602001610b32565b8381111561066e5750506000910152565b60008251610b6d818460208701610b2f565b9190910192915050565b6020815260008251806020840152610b96816040850160208701610b2f565b601f01601f1916919091016040019291505056fea26469706673582212202da848717b17a7b7dc544ceee3c1469fa5e99dc784d0a00324703a5b5e53d66f64736f6c634300080d0033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Airdrop> {
    return super.deploy(overrides || {}) as Promise<Airdrop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Airdrop {
    return super.attach(address) as Airdrop;
  }
  override connect(signer: Signer): Airdrop__factory {
    return super.connect(signer) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new utils.Interface(_abi) as AirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Airdrop {
    return new Contract(address, _abi, signerOrProvider) as Airdrop;
  }
}
